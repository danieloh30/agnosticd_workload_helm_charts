apiVersion: apps/v1
kind: Deployment
metadata:
  name: developer-hub
  labels:
    {{- include "rhdh.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "rhdh.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rhdh.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "rhdh.serviceAccountName" . }}
      volumes:
        - name: app-config-rhdh
          configMap:
            name: app-config-rhdh
        - name: backstage-tls
          secret:
            defaultMode: 420
            secretName: backstage-tls
        - name: backstage-app-config
          configMap:
            name: backstage-app-config
      imagePullSecrets:
        - name: rhdh-pull-secret
      containers:
        - name: backstage-backend
          image: quay.io/rhdh/developer-hub-rhel9:1.0-8
          imagePullPolicy: "Always"
          command:
            - node
            - packages/backend
          args:
            - "--config"
            - "app-config.yaml"
            - "--config"
            - "app-config.example.yaml"
            - "--config"
            - "app-config.example.production.yaml"
            - "--config"
            - "/app/app-config-rhdh.yaml"
            - "--config"
            - "/app/app-config-rhdh.yaml"
            - "--config"
            - "/app/app-config-from-configmap.yaml"
          env:
            - name: APP_CONFIG_backend_listen_port
              value: "7007"
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "rhdh.fullname" . }}-postgresql
                  key: databaseHost 
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "rhdh.fullname" . }}-postgresql
                  key: databasePort
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "rhdh.fullname" . }}-postgresql
                  key: databaseUser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "rhdh.postgresql.name" . }}
                  key: databasePassword
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "rhdh.postgresql.name" . }}
                  key: databaseAdminPassword
          ports:
            - name: backend
              containerPort: 7007
              protocol: TCP
          volumeMounts:
            - name: app-config-rhdh
              mountPath: "/app/app-config-rhdh.yaml"
              subPath: app-config-rhdh.yaml
            - name: backstage-app-config
              mountPath: "/app/app-config-from-configmap.yaml"
              subPath: app-config.yaml
        - args:
          - '--provider=oidc'
          - '--email-domain=*'
          - '--upstream=http://localhost:7007'
          - '--http-address=0.0.0.0:4180'
          - '--skip-provider-button'
          - '--insecure-oidc-allow-unverified-email=true'
          image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.12
          imagePullPolicy: IfNotPresent
          name: oauth2-proxy
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: rhdh-keycloak-creds
                  key: rhsso.clientId
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: rhdh-keycloak-creds
                  key: rhsso.clientSecret
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              value: {{ .Values.oauth2Proxy.issuerUrl }}
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: rhdh-keycloak-creds
                  key: oauth2Proxy.cookieSecret
            - name: OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY
              value: "{{ .Values.oauth2Proxy.skipTlsVerify }}"
          ports:
          - containerPort: {{ .Values.oauth2Proxy.port }}
            name: oauth2-proxy
            protocol: TCP
